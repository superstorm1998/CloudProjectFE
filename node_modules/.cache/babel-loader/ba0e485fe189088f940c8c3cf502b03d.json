{"ast":null,"code":"var _jsxFileName = \"D:\\\\cn9\\\\Cloud\\\\project\\\\my-app\\\\src\\\\component\\\\series.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\nimport { Grid, Button, Typography, Dialog, DialogTitle, DialogContent, TextField, DialogActions } from \"@material-ui/core\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {}\n  }\n}))(TableRow);\nexport default class Transaction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      data: null,\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let url = \"https://stockymanager.azurewebsites.net/api/Series/S001\";\n    fetch(proxyurl + url).then(response => response.json()).then(data => this.setState({\n      data: data\n    })).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser?\"));\n  }\n\n  render() {\n    const useStyles = {\n      table: {\n        minWidth: 700\n      }\n    };\n    const {\n      data,\n      open\n    } = this.state;\n    console.log(data);\n    return React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      style: {\n        padding: \"0.5rem\",\n        border: \"1px solid blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Series\")), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      startIcon: React.createElement(AddCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Subscribe\"))))), React.createElement(Table, {\n      stickyHeader: true,\n      style: useStyles,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Id\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Open Time\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Close Time\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Pre Money\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Post Money\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Company Id\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/cn9/Cloud/project/my-app/src/component/series.js"],"names":["Paper","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","Grid","Button","Typography","Dialog","DialogTitle","DialogContent","TextField","DialogActions","AddCircleOutlineOutlinedIcon","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","Transaction","Component","constructor","props","state","error","data","open","componentDidMount","proxyurl","url","fetch","then","response","json","setState","catch","console","log","render","useStyles","table","minWidth","padding","border","textAlign","handleClose"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {}\r\n  }\r\n}))(TableRow);\r\n\r\nexport default class Transaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      data: null,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    let url = \"https://stockymanager.azurewebsites.net/api/Series/S001\";\r\n\r\n    fetch(proxyurl + url)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ data: data }))\r\n      .catch(() =>\r\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser?\")\r\n      );\r\n  }\r\n  render() {\r\n    const useStyles = {\r\n      table: {\r\n        minWidth: 700\r\n      }\r\n    };\r\n    const { data, open } = this.state;\r\n    console.log(data);\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          style={{ padding: \"0.5rem\", border: \"1px solid blue\" }}\r\n        >\r\n          <Grid item xs={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n              Series\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\" item xs={2}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Subscribe\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n        <Table stickyHeader style={useStyles} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Id</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Open Time</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Close Time</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Pre Money</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Post Money</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Company Id</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {data &&\r\n              data.map((row, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.openTime}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.status}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.closeTime}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.preMoney}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.postMoney}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.companyId}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}