{"ast":null,"code":"var _jsxFileName = \"D:\\\\cn9\\\\Cloud\\\\project\\\\my-app\\\\src\\\\component\\\\transaction.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\nimport { Backdrop, CircularProgress, Grid, Typography, TextField, InputAdornment } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport toastr from \"toastr\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {}\n  }\n}))(TableRow);\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\n\nfunction SimpleBackdrop(open) {\n  const classes = useStyles();\n  return React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: open.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}\n\nexport default class Transaction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = event => {\n      const {\n        data\n      } = this.state;\n      const value = event.target.value;\n      this.setState({\n        searchValue: value,\n        dataSearch: data && data.filter(item => item = value)\n      });\n    };\n\n    this.state = {\n      error: null,\n      transactions: null,\n      isOpen: false,\n      dataSearch: null,\n      searchValue: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let url = \"https://stockymanager.azurewebsites.net/api/Transaction\";\n    this.setState({\n      isOpen: true\n    });\n    toastr.options = {\n      closeButton: false,\n      debug: false,\n      newestOnTop: false,\n      progressBar: false,\n      positionClass: \"toast-top-right\",\n      preventDuplicates: false,\n      onclick: null,\n      showDuration: \"300\",\n      hideDuration: \"1000\",\n      timeOut: \"3000\",\n      extendedTimeOut: \"1000\",\n      showEasing: \"swing\",\n      hideEasing: \"linear\",\n      showMethod: \"fadeIn\",\n      hideMethod: \"fadeOut\"\n    };\n    fetch(proxyurl + url).then(response => response.json()).then(data => this.setState({\n      transactions: data,\n      isOpen: false\n    })).catch(() => {\n      this.setState({\n        isOpen: false\n      });\n      toastr.error(\"There are some error had been happen. Please try in another time.\", \"Fail\");\n    });\n  }\n\n  render() {\n    const {\n      transactions,\n      isOpen,\n      dataSearch,\n      searchValue\n    } = this.state;\n    return React.createElement(TableContainer, {\n      component: Paper,\n      style: {\n        maxHeight: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(SimpleBackdrop, {\n      open: isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      alignItems: \"center\",\n      style: {\n        padding: \"0.5rem\",\n        border: \"1px solid blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      style: {\n        padding: \"0 2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Transaction\")), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Search\",\n      variant: \"outlined\",\n      margin: \"dense\",\n      onChange: this.handleSearch,\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(SearchIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Id\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Transaction Time\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Status\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Shares Quantity\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Time Approve\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Series Id\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Transaction TypeId\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, searchValue === \"\" ? transactions && transactions.map((row, index) => React.createElement(StyledTableRow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, row.id), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, row.openTime && moment(row.openTime).format(\"YYYY-MM-DD\")), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, row.closeTime && moment(row.closeTime).format(\"YYYY-MM-DD\")), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, row.preMoney), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, row.postMoney))) : dataSearch && dataSearch ? dataSearch.map((row, index) => React.createElement(StyledTableRow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, row.id), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, row.openTime && moment(row.openTime).format(\"YYYY-MM-DD\")), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, row.closeTime && moment(row.closeTime).format(\"YYYY-MM-DD\")), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, row.preMoney), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, row.postMoney))) : React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"No record is matched.\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/cn9/Cloud/project/my-app/src/component/transaction.js"],"names":["Paper","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","Backdrop","CircularProgress","Grid","Typography","TextField","InputAdornment","moment","SearchIcon","toastr","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","useStyles","backdrop","zIndex","drawer","SimpleBackdrop","open","classes","Transaction","Component","constructor","props","handleSearch","event","data","state","value","target","setState","searchValue","dataSearch","filter","item","error","transactions","isOpen","componentDidMount","proxyurl","url","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","fetch","then","response","json","catch","render","maxHeight","padding","border","endAdornment","map","row","index","id","openTime","format","closeTime","preMoney","postMoney"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport toastr from \"toastr\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {},\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction SimpleBackdrop(open) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={open.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default class Transaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      transactions: null,\r\n      isOpen: false,\r\n      dataSearch: null,\r\n      searchValue: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    let url = \"https://stockymanager.azurewebsites.net/api/Transaction\";\r\n    this.setState({ isOpen: true });\r\n    toastr.options = {\r\n      closeButton: false,\r\n      debug: false,\r\n      newestOnTop: false,\r\n      progressBar: false,\r\n      positionClass: \"toast-top-right\",\r\n      preventDuplicates: false,\r\n      onclick: null,\r\n      showDuration: \"300\",\r\n      hideDuration: \"1000\",\r\n      timeOut: \"3000\",\r\n      extendedTimeOut: \"1000\",\r\n      showEasing: \"swing\",\r\n      hideEasing: \"linear\",\r\n      showMethod: \"fadeIn\",\r\n      hideMethod: \"fadeOut\",\r\n    };\r\n    fetch(proxyurl + url)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ transactions: data, isOpen: false }))\r\n      .catch(() => {\r\n        this.setState({\r\n          isOpen: false,\r\n        });\r\n        toastr.error(\r\n          \"There are some error had been happen. Please try in another time.\",\r\n          \"Fail\"\r\n        );\r\n      });\r\n  }\r\n  handleSearch = (event) => {\r\n    const { data } = this.state;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      searchValue: value,\r\n      dataSearch: data && data.filter((item) => (item = value)),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { transactions, isOpen, dataSearch, searchValue } = this.state;\r\n    return (\r\n      <TableContainer component={Paper} style={{ maxHeight: \"30rem\" }}>\r\n        <SimpleBackdrop open={isOpen} />\r\n        <Grid\r\n          container\r\n          xs={12}\r\n          alignItems=\"center\"\r\n          style={{ padding: \"0.5rem\", border: \"1px solid blue\" }}\r\n        >\r\n          <Grid item xs={4} style={{ padding: \"0 2rem\" }}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n              Transaction\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={8} container justify=\"flex-end\">\r\n            <TextField\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              onChange={this.handleSearch}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Table stickyHeader aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Transaction Time</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Shares Quantity</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Time Approve</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Series Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">\r\n                Transaction TypeId\r\n              </StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {searchValue === \"\" ? (\r\n              transactions &&\r\n              transactions.map((row, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.openTime && moment(row.openTime).format(\"YYYY-MM-DD\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.closeTime &&\r\n                      moment(row.closeTime).format(\"YYYY-MM-DD\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.preMoney}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.postMoney}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))\r\n            ) : dataSearch && dataSearch ? (\r\n              dataSearch.map((row, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.openTime && moment(row.openTime).format(\"YYYY-MM-DD\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.closeTime &&\r\n                      moment(row.closeTime).format(\"YYYY-MM-DD\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.preMoney}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.postMoney}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <StyledTableCell align=\"left\">\r\n                  No record is matched.\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}