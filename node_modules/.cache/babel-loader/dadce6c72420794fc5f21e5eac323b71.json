{"ast":null,"code":"var _jsxFileName = \"D:\\\\cn9\\\\Cloud\\\\project\\\\my-app\\\\src\\\\component\\\\share.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\nimport { Grid, Button, TextField, DialogContent, DialogTitle, Dialog, Backdrop, CircularProgress, Typography, DialogActions, FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {}\n  }\n}))(TableRow);\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\n\nfunction SimpleBackdrop(open) {\n  const classes = useStyles();\n  return React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: open.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nexport default class Transaction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = async () => {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      let url = \"https://stockymanager.azurewebsites.net/api/Shareholder?companyID=CPN001\";\n      this.setState({\n        isOpen: true\n      });\n      await fetch(proxyurl + url).then(response => response.json()).then(data => this.setState({\n        data: data,\n        isOpen: false\n      })).catch(() => this.setState({\n        isOpen: false\n      }));\n    };\n\n    this.getShareType = async () => {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      let url = \"https://stockymanager.azurewebsites.net/api/ShareholderType\";\n      this.setState({\n        isOpen: true\n      });\n      await fetch(proxyurl + url).then(response => response.json()).then(data => this.setState({\n        shareHolderType: data,\n        isOpen: false\n      })).catch(() => this.setState({\n        isOpen: false\n      }));\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleChangeStatus = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.handleChangeType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleSave = () => {\n      const {\n        Id,\n        totalShare,\n        UserId,\n        status,\n        type\n      } = this.state;\n      const data = {\n        id: Id,\n        totalShares: parseInt(totalShare),\n        status: status,\n        userId: UserId,\n        shareholderTypeId: type,\n        companyId: \"CPN001\"\n      };\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      let url = \"https://stockymanager.azurewebsites.net/api/Shareholder\";\n      this.setState({\n        isOpen: true\n      });\n      fetch(proxyurl + url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          this.getData();\n        } else {\n          this.setState({\n            isOpen: false\n          });\n        }\n      }).catch(() => this.setState({\n        isOpen: false\n      }));\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleCloseSnackbar = () => {\n      this.setState({\n        openToast: false\n      });\n    };\n\n    this.state = {\n      error: null,\n      data: null,\n      isOpen: false,\n      open: false,\n      shareHolderType: null,\n      status: \"Active\",\n      type: \"CFD\",\n      Id: \"\",\n      totalShare: \"\",\n      UserId: \"\",\n      msg: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getShareType();\n  }\n\n  render() {\n    const {\n      data,\n      isOpen,\n      open,\n      status,\n      type,\n      shareHolderType,\n      msg,\n      Id,\n      totalShare,\n      UserId\n    } = this.state;\n    const gridItem = {\n      padding: \"0.5rem\"\n    };\n    return React.createElement(TableContainer, {\n      component: Paper,\n      style: {\n        maxHeight: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(SimpleBackdrop, {\n      open: isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      style: {\n        padding: \"0.5rem\",\n        border: \"1px solid blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"ShareHolder\")), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      startIcon: React.createElement(AddCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }),\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Dialog, {\n      open: open,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      style: {\n        textAlign: \"center\",\n        color: \"blue\",\n        padding: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Add ShareHolder\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      justify: \"center\",\n      alignItems: \"center\",\n      style: gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"ShareHolder Id:\"), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"Id\",\n      variant: \"outlined\",\n      label: \"Id\",\n      size: \"small\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      justify: \"center\",\n      alignItems: \"center\",\n      style: gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Total Shares:\"), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      label: \"Total share\",\n      size: \"small\",\n      type: \"number\",\n      onChange: this.handleChange,\n      name: \"totalShare\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      justify: \"center\",\n      alignItems: \"center\",\n      style: gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Status:\"), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \" -webkit-fill-available\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Select, {\n      fullWidth: true,\n      labelId: \"demo-simple-select-helper-label\",\n      id: \"demo-simple-select-helper\",\n      value: status,\n      inputProps: {\n        style: {\n          padding: \"0.6rem\"\n        }\n      },\n      onChange: this.handleChangeStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Active\"), React.createElement(MenuItem, {\n      value: \"Negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Negative\"))))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      justify: \"center\",\n      alignItems: \"center\",\n      style: gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"User Id:\"), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"UserId\",\n      variant: \"outlined\",\n      label: \"Id\",\n      size: \"small\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 10,\n      justify: \"center\",\n      style: gridItem,\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"ShareHolder Type:\"), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \" -webkit-fill-available\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Select, {\n      fullWidth: true,\n      labelId: \"demo-simple-select-helper-label\",\n      id: \"demo-simple-select-helper\",\n      value: type,\n      inputProps: {\n        style: {\n          padding: \"0.6rem\"\n        }\n      },\n      onChange: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, shareHolderType && shareHolderType.map((item, index) => React.createElement(MenuItem, {\n      key: index,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, item.id)))))))), Id === \"\" || totalShare !== \"\" || UserId !== \"\" ? React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"\\\"Please input all in the form.\\\"\") : null, React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        padding: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Cancel\")), Id !== \"\" && totalShare !== \"\" && UserId !== \"\" && React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Add\"))))))), React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Id\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Total Shares\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Status\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"User Id\"), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Shareholder TypeId\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, data && data.map((row, index) => React.createElement(StyledTableRow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, row.id), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, row.totalShares), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, row.status), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, row.userId), React.createElement(StyledTableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, row.shareholderTypeId))))));\n  }\n\n}","map":{"version":3,"sources":["D:/cn9/Cloud/project/my-app/src/component/share.js"],"names":["Paper","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","Grid","Button","TextField","DialogContent","DialogTitle","Dialog","Backdrop","CircularProgress","Typography","DialogActions","FormControl","Select","MenuItem","AddCircleOutlineOutlinedIcon","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","useStyles","backdrop","zIndex","drawer","SimpleBackdrop","open","classes","Transaction","Component","constructor","props","getData","proxyurl","url","setState","isOpen","fetch","then","response","json","data","catch","getShareType","shareHolderType","handleClickOpen","handleClose","handleChange","event","target","name","value","handleChangeStatus","status","handleChangeType","type","handleSave","Id","totalShare","UserId","state","id","totalShares","parseInt","userId","shareholderTypeId","companyId","method","JSON","stringify","headers","Accept","handleCloseSnackbar","openToast","error","msg","componentDidMount","render","gridItem","padding","maxHeight","border","textAlign","width","style","map","item","index","row"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Dialog,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Typography,\r\n  DialogActions,\r\n  FormControl,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {}\r\n  }\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\"\r\n  }\r\n}));\r\n\r\nfunction SimpleBackdrop(open) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={open.open}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default class Transaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      data: null,\r\n      isOpen: false,\r\n      open: false,\r\n      shareHolderType: null,\r\n      status: \"Active\",\r\n      type: \"CFD\",\r\n      Id: \"\",\r\n      totalShare: \"\",\r\n      UserId: \"\",\r\n      msg: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.getShareType();\r\n  }\r\n\r\n  getData = async () => {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    let url =\r\n      \"https://stockymanager.azurewebsites.net/api/Shareholder?companyID=CPN001\";\r\n    this.setState({ isOpen: true });\r\n\r\n    await fetch(proxyurl + url)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ data: data, isOpen: false }))\r\n      .catch(() => this.setState({ isOpen: false }));\r\n  };\r\n\r\n  getShareType = async () => {\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    let url = \"https://stockymanager.azurewebsites.net/api/ShareholderType\";\r\n    this.setState({ isOpen: true });\r\n\r\n    await fetch(proxyurl + url)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ shareHolderType: data, isOpen: false }))\r\n      .catch(() => this.setState({ isOpen: false }));\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleChangeStatus = event => {\r\n    this.setState({ status: event.target.value });\r\n  };\r\n\r\n  handleChangeType = event => {\r\n    this.setState({ type: event.target.value });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { Id, totalShare, UserId, status, type } = this.state;\r\n\r\n    const data = {\r\n      id: Id,\r\n      totalShares: parseInt(totalShare),\r\n      status: status,\r\n      userId: UserId,\r\n      shareholderTypeId: type,\r\n      companyId: \"CPN001\"\r\n    };\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    let url = \"https://stockymanager.azurewebsites.net/api/Shareholder\";\r\n    this.setState({ isOpen: true });\r\n    fetch(proxyurl + url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          this.getData();\r\n        } else {\r\n          this.setState({ isOpen: false });\r\n        }\r\n      })\r\n      .catch(() => this.setState({ isOpen: false }));\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ openToast: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      isOpen,\r\n      open,\r\n      status,\r\n      type,\r\n      shareHolderType,\r\n      msg,\r\n      Id,\r\n      totalShare,\r\n      UserId\r\n    } = this.state;\r\n    const gridItem = {\r\n      padding: \"0.5rem\"\r\n    };\r\n    return (\r\n      <TableContainer component={Paper} style={{ maxHeight: \"30rem\" }}>\r\n        <SimpleBackdrop open={isOpen} />\r\n\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          style={{ padding: \"0.5rem\", border: \"1px solid blue\" }}\r\n        >\r\n          <Grid item xs={10} style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n              ShareHolder\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\" item xs={2}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n              onClick={this.handleClickOpen}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Dialog open={open} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle\r\n                style={{ textAlign: \"center\", color: \"blue\", padding: \"1rem\" }}\r\n              >\r\n                Add ShareHolder\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <Grid container justify=\"center\">\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={10}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={gridItem}\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      ShareHolder Id:\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        name=\"Id\"\r\n                        variant=\"outlined\"\r\n                        label=\"Id\"\r\n                        size=\"small\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={10}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={gridItem}\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      Total Shares:\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        label=\"Total share\"\r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        onChange={this.handleChange}\r\n                        name=\"totalShare\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={10}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={gridItem}\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      Status:\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{ width: \" -webkit-fill-available\" }}\r\n                      >\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-helper-label\"\r\n                          id=\"demo-simple-select-helper\"\r\n                          value={status}\r\n                          inputProps={{ style: { padding: \"0.6rem\" } }}\r\n                          onChange={this.handleChangeStatus}\r\n                        >\r\n                          <MenuItem value=\"Active\">Active</MenuItem>\r\n                          <MenuItem value=\"Negative\">Negative</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={10}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={gridItem}\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      User Id:\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        name=\"UserId\"\r\n                        variant=\"outlined\"\r\n                        label=\"Id\"\r\n                        size=\"small\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={10}\r\n                    justify=\"center\"\r\n                    style={gridItem}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      ShareHolder Type:\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{ width: \" -webkit-fill-available\" }}\r\n                      >\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-helper-label\"\r\n                          id=\"demo-simple-select-helper\"\r\n                          value={type}\r\n                          inputProps={{ style: { padding: \"0.6rem\" } }}\r\n                          onChange={this.handleChangeType}\r\n                        >\r\n                          {shareHolderType &&\r\n                            shareHolderType.map((item, index) => (\r\n                              <MenuItem key={index} value={item.id}>\r\n                                {item.id}\r\n                              </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </DialogContent>\r\n              {Id === \"\" || totalShare !== \"\" || UserId !== \"\" ? (\r\n                <Grid container justify=\"center\">\r\n                  \"Please input all in the form.\"\r\n                </Grid>\r\n              ) : null}\r\n              <DialogActions>\r\n                <Grid container justify=\"center\" style={{ padding: \"1rem\" }}>\r\n                  <Grid item xs={3} container justify=\"center\">\r\n                    <Button\r\n                      onClick={this.handleClose}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                  {Id !== \"\" && totalShare !== \"\" && UserId !== \"\" && (\r\n                    <Grid item xs={3} container justify=\"center\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleSave}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n        <Table stickyHeader aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Total Shares</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n              <StyledTableCell align=\"center\">User Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">\r\n                Shareholder TypeId\r\n              </StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data &&\r\n              data.map((row, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.totalShares}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.status}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{row.userId}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    {row.shareholderTypeId}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}